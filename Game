using System;
using System.Collections.Generic;
using System.Threading.Tasks;


public class Menu<T>
{
    private readonly List<T> _items;
    private readonly string _title;
    private readonly Func<T, string> _displaySelector;

    public Menu(string title, List<T> items, Func<T, string> displaySelector)
    {
        _title = title;
        _items = items ?? new List<T>();
        _displaySelector = displaySelector ?? (item => item?.ToString() ?? "");
    }

    public T ShowAndGetSelection()
    {
        if (_items.Count == 0)
        {
            Console.WriteLine($"No items available in {_title}. Press any key to continue...");
            Console.ReadKey();
            return default;
        }

        while (true)
        {
            Console.Clear();
            Console.WriteLine($"=== {_title} ===");
            Console.WriteLine();

            for (int i = 0; i < _items.Count; i++)
            {
                Console.WriteLine($"{i + 1}. {_displaySelector(_items[i])}");
            }

            Console.WriteLine();
            Console.WriteLine("0. Go Back");
            Console.Write("Enter selection: ");

            string input = Console.ReadLine();

            if (int.TryParse(input, out int selection))
            {
                if (selection == 0)
                    return default;

                if (selection > 0 && selection <= _items.Count)
                {
                    return _items[selection - 1];
                }
            }

            Console.WriteLine("Invalid selection. Press any key to try again.");
            Console.ReadKey();
        }
    }
}


public class Game
{
    private bool _isRunning;
    private AnimalTypes selectedAnimal;

    public async Task GameLoop()
    {
        Initialize();

        _isRunning = true;
        while (_isRunning)
        {
            int mainChoice = ShowMainMenu();
            Console.Clear();

            switch (mainChoice)
            {
                case 1:
                    await StartGame();
                    break;
                case 2:
                    ShowCredits();
                    break;
                case 3:
                    _isRunning = false;
                    break;
                default:
                    Console.WriteLine("Invalid choice");
                    break;
            }
        }

        Console.WriteLine("Thanks for playing!");
    }

    

    private int ShowMainMenu()
    {
        Console.WriteLine("Welcome to the Game");
        Console.WriteLine("1. Start Game");
        Console.WriteLine("2. Credits");
        Console.WriteLine("3. Exit");
        Console.Write("Your choice (1-3): ");

        string input = Console.ReadLine();
        if (int.TryParse(input, out int choice))
            return choice;

        return -1;
    }

    private async Task StartGame()
    {
        var animals = new List<AnimalTypes>
        {
            new AnimalTypes("Garavel", "Male", "domesticated", 3, "Cat"),
            new AnimalTypes("Pasa", "Male", "domesticated", 10, "Dog"),
            new AnimalTypes("Cancan", "Male", "domesticated", 8, "Bird"),
            new AnimalTypes("Nando", "Female", "wild", 7, "Lion"),
            new AnimalTypes("Mimi", "Female", "domesticated", 2, "Rabbit")
        };

        var animalMenu = new Menu<AnimalTypes>("Select Your Animal", animals, a => $"{a.AnimalType} - {a.Name} ({a.Gender}, Age: {a.Age})");
        selectedAnimal = animalMenu.ShowAndGetSelection();

        if (selectedAnimal == null)
        {
            Console.WriteLine("Returning to main menu...");
            await Task.Delay(1000);
            return;
        }

        Console.WriteLine($"You selected: {selectedAnimal.AnimalType} - {selectedAnimal.Name}");
        Console.WriteLine("Adventure is starting!");
        Console.WriteLine();
        await Task.Delay(1000);

        
    }

    private void ShowCredits()
    {
        Console.WriteLine("ðŸ“œ About");
        Console.WriteLine("This project was developed by Ata Guler (225040071) for the DGD208 course.");
        Console.WriteLine();
    }
}


public class AnimalTypes
{
    public static string Type = "Animal";

    public string Name { get; set; }
    public string Gender { get; set; }
    public string WildDomesticated { get; set; }
    public int Age { get; set; }
    public string AnimalType { get; set; }

    public AnimalTypes(string name, string gender, string wildDomesticated, int age, string animalType)
    {
        Name = name;
        Gender = gender;
        WildDomesticated = wildDomesticated;
        Age = age;
        AnimalType = animalType;
    }
}
